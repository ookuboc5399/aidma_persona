# マッチングシステム仕組み - memo3.txt

## 概要
課題を抱える企業に対して、最適な解決企業をマッチングする4段階のフォールバックシステム

## マッチング処理の流れ

### 1. 課題抽出
- 会話データから課題を抽出
- OpenAI APIを使用して課題を構造化
- 複数の課題が抽出される場合がある

### 2. 4段階マッチングシステム

#### 第1段階: ChatGPT マッチング (第一優先)
- **使用技術**: OpenAI GPT-4o-mini
- **処理内容**:
  - Snowflakeから企業データ50社をランダム取得
  - 課題解決に最適な企業を3社選出
  - 詳細なマッチング理由と解決方法を生成
- **出力形式**: JSON形式で企業情報とマッチング理由を返却
- **メリット**: 高品質な分析と詳細な理由付け

#### 第2段階: Snowflake AI マッチング (第二優先)
- **使用技術**: Snowflake Cortex AI (SNOWFLAKE.CORTEX_USER.SCORE)
- **処理内容**:
  - セマンティック類似度計算
  - 業種ボーナス (IT関連、製造業など)
  - ソリューションボーナス (解決、支援キーワード)
- **スコア計算**: semantic_similarity + industry_bonus + solution_bonus
- **制限**: 上位3社に制限

#### 第3段階: セマンティック検索 (第三優先)
- **使用技術**: キーワードベースのLIKE検索
- **処理内容**:
  - 課題からキーワードを抽出 (2文字以上、最大5個)
  - BUSINESS_DESCRIPTION、INDUSTRY、BUSINESS_TAGSで検索
  - マッチした場合は0.7、そうでなければ0.3のスコア
- **フォールバック**: キーワード検索でも0件の場合は全企業からランダム選択

#### 第4段階: ランダム選択 (最終手段)
- **使用技術**: Snowflake RANDOM()関数
- **処理内容**:
  - 全企業からランダムに3社選出
  - 必ず結果を返す保証
- **スコア**: 固定値0.3

## データベース構造

### COMPANIESテーブル
- COMPANY_ID: 企業ID
- COMPANY_NAME: 企業名
- INDUSTRY: 業種
- REGION: 地域
- PREFECTURE: 都道府県
- BUSINESS_TAGS: ビジネスタグ
- ORIGINAL_TAGS: オリジナルタグ
- BUSINESS_DESCRIPTION: 事業内容
- CHALLENGES: 企業が抱える課題
- STRENGTHS: 企業の強み
- OFFICIAL_WEBSITE: 公式サイト
- CONSULTANT_NAME: コンサルタント名

## マッチング結果の表示

### フロントエンド表示
- **解決できる課題**: マッチングされた課題のタイトル部分を表示
- **企業情報**: 企業名、業種、地域、事業内容
- **マッチング理由**: なぜその企業が選ばれたかの理由
- **解決方法**: 具体的な解決アプローチ

### スプレッドシート出力
- **E列**: マッチング企業名 (上位3社)
- **F列**: CONSULTANT_NAME
- **G列**: business_description (解決内容)

## エラーハンドリング

### 各段階でのエラー処理
1. **ChatGPT失敗**: 次の段階(Snowflake AI)に自動移行
2. **Snowflake AI失敗**: 次の段階(セマンティック検索)に自動移行
3. **セマンティック検索失敗**: 最終段階(ランダム選択)に自動移行
4. **全段階失敗**: エラーメッセージを返却

### ログ出力
- 各段階の実行状況を詳細にログ出力
- 成功/失敗の理由を記録
- デバッグ情報を提供

## 設定・環境変数

### 必要な環境変数
- OPENAI_API_KEY: ChatGPT APIキー
- SNOWFLAKE_ACCOUNT: Snowflakeアカウント
- SNOWFLAKE_USER: Snowflakeユーザー名
- SNOWFLAKE_PASSWORD: Snowflakeパスワード
- SNOWFLAKE_WAREHOUSE: Snowflakeウェアハウス
- SNOWFLAKE_DATABASE: Snowflakeデータベース
- SNOWFLAKE_SCHEMA: Snowflakeスキーマ
- SNOWFLAKE_ROLE: Snowflakeロール

## パフォーマンス考慮事項

### 企業データ取得
- ChatGPTマッチングでは50社のランダムサンプルを使用
- 全企業データを取得すると処理が重くなるため制限

### API制限対策
- 処理間に1秒の待機時間を設定
- エラー時のリトライ機能

### 結果の制限
- 各段階で最大3社に制限
- メモリ使用量とレスポンス時間を最適化

## 今後の改善点

### 機能拡張
1. **マッチング精度向上**: より詳細な企業分析
2. **カスタマイズ機能**: 業種や地域での絞り込み
3. **履歴機能**: 過去のマッチング結果の保存
4. **評価機能**: マッチング結果のフィードバック収集

### 技術的改善
1. **キャッシュ機能**: 頻繁にアクセスされる企業データのキャッシュ
2. **並列処理**: 複数課題の同時処理
3. **機械学習**: マッチング精度の向上
4. **リアルタイム更新**: 企業データの自動更新

## ファイル構成

### 主要ファイル
- `app/api/process/single-challenge-matching/route.ts`: メインのマッチング処理
- `lib/snowflake.ts`: Snowflake接続とクエリ実行
- `app/page.tsx`: フロントエンド表示
- `app/api/sheets/write-results/route.ts`: スプレッドシート出力

### 関連API
- `app/api/snowflake/ai-match/route.ts`: Snowflake AI マッチング
- `app/api/snowflake/comprehensive-match/route.ts`: 総合マッチング
- `app/api/challenges/extract/route.ts`: 課題抽出

---
作成日: 2024年12月
更新日: 2024年12月
